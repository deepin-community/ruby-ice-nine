From: Lucas Kanashiro <kanashiro@ubuntu.com>
Date: Mon, 24 Jan 2022 17:23:16 -0300
Subject: Skip tests trying to modify frozen Range

In Ruby 3, any Range is frozen by default, and those tests try to modify
them, resulting in failures. The upstream bug with all the discussion:

https://bugs.ruby-lang.org/issues/15504

Upstream is dead and it seems that it is not going to get fixed.

Forwarded: not-needed
---
 spec/integration/ice_nine/class_methods/deep_freeze_bang_spec.rb   | 1 +
 spec/integration/ice_nine/class_methods/deep_freeze_spec.rb        | 1 +
 spec/unit/ice_nine/freezer/range/class_methods/deep_freeze_spec.rb | 1 +
 3 files changed, 3 insertions(+)

diff --git a/spec/integration/ice_nine/class_methods/deep_freeze_bang_spec.rb b/spec/integration/ice_nine/class_methods/deep_freeze_bang_spec.rb
index a7fc922..2e1d16e 100644
--- a/spec/integration/ice_nine/class_methods/deep_freeze_bang_spec.rb
+++ b/spec/integration/ice_nine/class_methods/deep_freeze_bang_spec.rb
@@ -5,6 +5,7 @@ require 'ice_nine'
 require 'delegate'
 
 describe IceNine, '.deep_freeze!' do
+  before { skip('In Ruby 3, Range is now frozen by default') }
   subject { object.deep_freeze!(value) }
 
   let(:object) { IceNine }
diff --git a/spec/integration/ice_nine/class_methods/deep_freeze_spec.rb b/spec/integration/ice_nine/class_methods/deep_freeze_spec.rb
index 479339d..67b6e59 100644
--- a/spec/integration/ice_nine/class_methods/deep_freeze_spec.rb
+++ b/spec/integration/ice_nine/class_methods/deep_freeze_spec.rb
@@ -5,6 +5,7 @@ require 'ice_nine'
 require 'delegate'
 
 describe IceNine, '.deep_freeze' do
+  before { skip('In Ruby 3, Range is now frozen by default') }
   subject { object.deep_freeze(value) }
 
   let(:object) { IceNine }
diff --git a/spec/unit/ice_nine/freezer/range/class_methods/deep_freeze_spec.rb b/spec/unit/ice_nine/freezer/range/class_methods/deep_freeze_spec.rb
index a063ebf..6b7e84d 100644
--- a/spec/unit/ice_nine/freezer/range/class_methods/deep_freeze_spec.rb
+++ b/spec/unit/ice_nine/freezer/range/class_methods/deep_freeze_spec.rb
@@ -34,6 +34,7 @@ describe IceNine::Freezer::Range, '.deep_freeze' do
   end
 
   context 'with a Range' do
+    before { skip('In Ruby 3, Range is now frozen by default') }
     let(:value) { element_class.new(1)..element_class.new(100) }
 
     context 'without a circular reference' do
